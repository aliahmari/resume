{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","Sections/TitlesAndIcons.js","Sections/AboutSection.js","components/skillCard.js","Sections/Skills.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","sectionBg","backgroundColor","color","react_default","a","createElement","className","concat","style","Component","DownIcon","display","flexDirection","justifyContent","alignItems","marginBottom","transform","modules","activeClass","to","spy","smooth","offset","delay","duration","onSetActive","handleSetActive","index_es","fontSize","icon","faChevronDown","name","TitlesAndIcons","src_components_Fullpage","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","components_DownIcon","AboutSection","sections","items","content","SkillCard","skill","faLayerGroup","href","Skills","eachSkill","components_skillCard","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","first","second","third","btnColor","textColor","firstSection","secondSection","tihrdSection","btnBorder","btnRadius","btnBackground","navBackgroundColor","innerNavBg","firstSectionBg","datatip","ChangeColor","setState","addNotification","bind","assertThisInitialized","notificationDOMRef","React","createRef","current","message","type","insert","container","animationIn","animationOut","dismiss","dismissable","click","_this2","background","react_notifications_component_default","ref","data-tip","border","onClick","dist_default","place","effect","src_Sections_TitlesAndIcons","src_Sections_AboutSection","src_Sections_Skills","lib_default","followMouse","snowColor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.221c47df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    const sectionBg = {\r\n      backgroundColor: this.props.color\r\n    };\r\n    return (\r\n      <div\r\n        className={`fullpage ${this.props.className || \"\"}`}\r\n        style={sectionBg}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass DownIcon extends Component {\r\nrender (){\r\n    return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"-10px\",\r\n            transform: \"translateY(-65px)\"\r\n          }}\r\n        >\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            delay={0}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <FontAwesomeIcon style= {{fontSize: \"40px\"}} className=\"ScrollDown\" icon={faChevronDown} />\r\n          </Link>\r\n          <Element name=\"About\" className=\"element\" />\r\n        </div>\r\n      );\r\n}\r\n}\r\n\r\n\r\nexport default DownIcon\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport \"./TitlesAndIcons.css\";\r\n\r\nclass TitlesAndIcons extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\" color={this.props.color}>\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <h2 className=\"subtitle\">{data.subtitle}</h2>\r\n          <div className=\"socialicons\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <DownIcon />\r\n        <Element name=\"About\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesAndIcons;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./AboutSection.css\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\" color={this.props.color}>\r\n          <h3 className=\"title\">{data.sections[0].title}</h3>\r\n          <div className=\"BackgroundBox\">\r\n            <p className=\"aboutcontent\">{data.sections[0].items[0].content}</p>\r\n          </div>\r\n        </Fullpage>\r\n        <Element name=\"Skills\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./skillCard.css\";\r\nimport { faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"icon-wrapper\">\r\n          <FontAwesomeIcon icon={faLayerGroup} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n        <div className=\"contactMe\">\r\n          <a href=\"https://t.me/ali_ahmari\" className=\"aContactme\">\r\n            Contact Me!\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/skillCard\";\r\nimport \"./Skills.css\";\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"third\" color={this.props.color}>\r\n        <h3 className=\"title\">{data.sections[1].title}</h3>\r\n        <div className=\"cardWrapper\">\r\n          {data.sections[1].items.map(eachSkill => {\r\n            return <SkillCard skill={eachSkill} />;\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\n/* import logo from \"./logo.svg\"; */\r\nimport \"./App.css\";\r\nimport TitlesAndIcons from \"./Sections/TitlesAndIcons.js\";\r\nimport AboutSection from \"./Sections/AboutSection\";\r\nimport Skills from \"./Sections/Skills\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport SnowStorm from \"react-snowstorm\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNotification = this.addNotification.bind(this);\r\n    this.notificationDOMRef = React.createRef();\r\n  }\r\n\r\n  addNotification() {\r\n    this.notificationDOMRef.current.addNotification({\r\n      title: \"Site's style changed\",\r\n      message: \"Click again to see other style!\",\r\n      type: \"info\",\r\n      insert: \"bottom\",\r\n      container: \"bottom-right\",\r\n      animationIn: [\"animated\", \"fadeIn\"],\r\n      animationOut: [\"animated\", \"fadeOut\"],\r\n      dismiss: { duration: 4000 },\r\n      dismissable: { click: true }\r\n    });\r\n  }\r\n\r\n  state = {\r\n    first: \"#f6f6f6\",\r\n    second: \"#ffffff\",\r\n    third: \"#f6f6f6\",\r\n    btnColor: \"#fff\",\r\n    textColor: \"#000\",\r\n    firstSection: \"linear-gradient(75deg, #f6f6f6, #fefefe) repeat-x\",\r\n    secondSection: \"#fff\",\r\n    tihrdSection: \"linear-gradient(75deg, #f6f6f6, #fefefe) repeat-x\",\r\n    btnBorder: \"1px solid\",\r\n    btnRadius: \"5px\",\r\n    btnBackground: \"none\",\r\n    navBackgroundColor: \"#2a3e55\",\r\n    innerNavBg: \"none\",\r\n    firstSectionBg: \"#f6f6f6\",\r\n    datatip: \"Current theme is Defualt\"\r\n  };\r\n\r\n  ChangeColor = () => {\r\n    this.setState({\r\n      btnColor: this.state.btnColor === \"#32b4fd\" ? \"#fff\" : \"#32b4fd\",\r\n      btnBackground: this.state.btnBackground === \"none\" ? \"#fff\" : \"none\",\r\n      navBackgroundColor:\r\n        this.state.navBackgroundColor === \"#2a3e55\" ? \"#fff\" : \"#2a3e55\",\r\n      innerNavBg: this.state.innerNavBg === \"none\" ? \"#f6f5f4\" : \"none\",\r\n      btnBorder: this.state.btnBorder === \"1px solid\" ? \"none\" : \"1px solid\",\r\n      firstSectionBg: this.state.firstSectionBg === \"#000\" ? \"#f6f6f6\" : \"#000\",\r\n      first: this.state.first === \"#fff6f6\" ? \"#f6f6f6\" : \"#fff6f6\",\r\n      second: this.state.second === \"#f6f6f6\" ? \"#ffffff\" : \"#f6f6f6\",\r\n      third: this.state.third === \"#fff6f6\" ? \"#f6f6f6\" : \"#fff6f6\",\r\n      datatip:\r\n        this.state.datatip === \"Current theme is Awful🤮\"\r\n          ? \"Current theme is Defualt\"\r\n          : \"Current theme is Awful🤮\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div\r\n          style={{ background: this.state.navBackgroundColor }}\r\n          className=\"navigation\"\r\n        >\r\n          <div\r\n            style={{ background: this.state.innerNavBg }}\r\n            className=\"innerNav\"\r\n          >\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"About\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              delay={0}\r\n              duration={500}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              <a\r\n                style={{\r\n                  color: this.state.btnColor\r\n                }}\r\n                className=\"stickyNav\"\r\n              >\r\n                About\r\n              </a>\r\n            </Link>\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"Skills\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              delay={0}\r\n              duration={500}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              <a\r\n                style={{\r\n                  color: this.state.btnColor\r\n                }}\r\n                className=\"stickyNav\"\r\n              >\r\n                Skills\r\n              </a>\r\n            </Link>\r\n            <ReactNotification ref={this.notificationDOMRef} />\r\n            <a\r\n              data-tip={this.state.datatip}\r\n              style={{\r\n                color: this.state.btnColor,\r\n                border: this.state.btnBorder\r\n              }}\r\n              className=\"stickyNav ChangeColor\"\r\n              onClick={() => {\r\n                this.ChangeColor();\r\n                this.addNotification();\r\n              }}\r\n            >\r\n              Change Style!\r\n            </a>\r\n            <ReactTooltip place=\"right\" type=\"dark\" effect=\"solid\"/>\r\n          </div>\r\n        </div>\r\n        \r\n        <TitlesAndIcons color={this.state.first} />\r\n        <AboutSection color={this.state.second} />\r\n        <Skills color={this.state.third} />\r\n        <SnowStorm followMouse={false} snowColor={\"#000\"} />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}