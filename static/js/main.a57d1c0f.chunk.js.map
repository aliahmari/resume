{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","Sections/TitlesAndIcons.js","Sections/AboutSection.js","components/skillCard.js","Sections/Skills.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","DownIcon","style","display","flexDirection","justifyContent","alignItems","marginBottom","transform","modules","activeClass","to","spy","smooth","offset","delay","duration","onSetActive","handleSetActive","index_es","fontSize","icon","faChevronDown","name","TitlesAndIcons","src_components_Fullpage","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","components_DownIcon","AboutSection","sections","items","content","SkillCard","skill","faJsSquare","href","Skills","eachSkill","components_skillCard","App","Sections_TitlesAndIcons","src_Sections_AboutSection","src_Sections_Skills","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a57d1c0f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component {\r\n    render (){\r\n        const { children } = this.props\r\n        return(\r\n\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass DownIcon extends Component {\r\nrender (){\r\n    return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"-10px\",\r\n            transform: \"translateY(-65px)\"\r\n          }}\r\n        >\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            delay={0}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <FontAwesomeIcon style= {{fontSize: \"40px\"}} className=\"ScrollDown\" icon={faChevronDown} />\r\n          </Link>\r\n          <Element name=\"About\" className=\"element\" />\r\n        </div>\r\n      );\r\n}\r\n}\r\n\r\n\r\nexport default DownIcon\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nclass TitlesAndIcons extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <h2 className=\"subtitle\">{data.subtitle}</h2>\r\n          <div className=\"socialicons\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <DownIcon />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesAndIcons;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\n\r\nimport './AboutSection.css'\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Fullpage className=\"second\">\r\n      <h3 className=\"title\">{data.sections[0].title}</h3>\r\n        <div className=\"BackgroundBox\">\r\n          <p className=\"aboutcontent\">{data.sections[0].items[0].content}</p>\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./skillCard.css\";\r\nimport { faJsSquare } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"icon-wrapper\">\r\n          <FontAwesomeIcon icon={faJsSquare} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n        <div className=\"contactMe\">\r\n          <a href=\"https://t.me/ali_ahmari\" className=\"aContactme\">\r\n            Contact Me!\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/skillCard\";\r\nimport \"./Skills.css\";\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"third\">\r\n        <h3 className=\"title\">{data.sections[1].title}</h3>\r\n        <div className=\"cardWrapper\">\r\n          {data.sections[1].items.map(eachSkill => {\r\n            return <SkillCard skill={eachSkill} />;\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\nimport data from \"./data.json\";\n/* import logo from \"./logo.svg\"; */\nimport \"./App.css\";\nimport { SocialIcon } from \"react-social-icons\";\nimport Fullpage from \"./components/Fullpage\";\nimport TitlesAndIcons from \"./Sections/TitlesAndIcons.js\";\nimport AboutSection from \"./Sections/AboutSection\";\nimport Skills from \"./Sections/Skills\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navigation\" />\n\n        <TitlesAndIcons />\n        <AboutSection />\n        <Skills />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}